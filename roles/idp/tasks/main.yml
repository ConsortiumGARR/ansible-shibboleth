---
# tasks file for idp
- name: "Be sure that Jetty has the right libraries imported"
  file:
   src: "{{ item.src }}" 
   dest: "{{ item.dest }}"
   owner: "jetty"
   group: "jetty"
   state: link
  with_items:
   - { src: '/usr/share/java/commons-dbcp.jar' , dest: '/opt/jetty/lib/ext/common-dbcp.jar' }
   - { src: '/usr/share/java/commons-pool.jar' , dest: '/opt/jetty/lib/ext/commons-pool.jar' }
   - { src: '/usr/share/java/mysql.jar' , dest: '/opt/jetty/lib/ext/mysql-connector-java.jar' }
  notify:
   - "Restart Jetty"
  tags: idp

- name: "Check if Shibboleth IdP directory exists and store the result into 'shib_idp_dir' ansible variable"
  stat:
    path: "/opt/shibboleth-idp"
  register: shib_idp_dir
  changed_when: false
  tags: idp

- name: "Be sure that the Shibboleth Identity Provider is downloaded and extracted into the right position"
  unarchive:
    src: "https://shibboleth.net/downloads/identity-provider/{{ shib_idp_version }}/shibboleth-identity-provider-{{ shib_idp_version }}.tar.gz"
    dest: /usr/local/src
    owner: "root"
    group: "root"
    remote_src: True
  when: shib_idp_dir.stat.isdir is undefined
  tags: idp

- name: "Be sure that the Shibboleth Identity Provider installer properties' files exists in the right position"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "{{ item.mode }}"
  with_items:
   - { src: "shib-idp-install.properties.j2", dest: "/tmp/shib-idp-install.properties", mode: "0644" }
   - { src: "installer.properties.j2", dest: "/tmp/installer.properties", mode: "0644" } 
   - { src: "shib-idp-persistentId-db.sql.j2", dest: "/root/shib-idp-persistentId-db.sql", mode: "0600" }
  when: shib_idp_dir.stat.isdir is undefined
  tags: idp

- name: "Be sure that Apache2 and Jetty are configured to expone the Shibboleth IdP"
  copy:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "root"
   group: "root"
   mode: 0644
  with_items:
   - { src: "files/jstl-1.2.jar", dest: "/usr/local/src/shibboleth-identity-provider-{{ shib_idp_version }}/webapp/WEB-INF/lib/jstl-1.2.jar" }
   - { src: "files/idp.conf", dest: "/etc/apache2/sites-enabled/idp.conf" }
   - { src: "files/idp.xml", dest: "/opt/jetty/webapps/idp.xml" }
  notify:
   - "Restart Apache"
   - "Restart Jetty"
  tags: idp 

- name: "Be sure to install Shibboleth IdP"
  shell: "./install.sh -Didp.property.file=/tmp/installer.properties"
  args:
    chdir: "/usr/local/src/shibboleth-identity-provider-{{ shib_idp_version }}/bin"
  environment:
    JAVA_HOME: "{{ java_home_dir }}"
  notify:
    - "Restart Jetty"
    - "Restart Apache"
  when: shib_idp_dir.stat.isdir is undefined
  tags: idp

- name: "Be sure that the Shibboleth IdP directories have the right permissions"
  file:
    path: "/opt/shibboleth-idp/{{ item }}"
    owner: "jetty"
    recurse: "yes"
    state: directory
  with_items:
    - logs
    - metadata
    - credentials
    - conf
    - system
    - war
  tags: idp

- name: "RESTORE: Be sure to restore the credentials of Shibboleth IdP"
  copy:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "jetty"
   group: "root"
   mode: "{{ item.mode }}"
  with_items:
   - { src: "files/restore/{{ ansible_hostname }}/credentials/idp-signing.crt", dest: "/opt/shibboleth-idp/credentials/idp-signing.crt", mode: "0644" }
   - { src: "files/restore/{{ ansible_hostname }}/credentials/idp-signing.key", dest: "/opt/shibboleth-idp/credentials/idp-signing.key", mode: "0600" }
   - { src: "files/restore/{{ ansible_hostname }}/credentials/idp-encryption.crt", dest: "/opt/shibboleth-idp/credentials/idp-encryption.crt", mode: "0644" }
   - { src: "files/restore/{{ ansible_hostname }}/credentials/idp-encryption.key", dest: "/opt/shibboleth-idp/credentials/idp-encryption.key", mode: "0600" }
   - { src: "files/restore/{{ ansible_hostname }}/credentials/idp-backchannel.crt", dest: "/opt/shibboleth-idp/credentials/idp-backchannel.crt", mode: "0644" }
   - { src: "files/restore/{{ ansible_hostname }}/credentials/idp-backchannel.p12", dest: "/opt/shibboleth-idp/credentials/idp-backchannel.p12", mode: "0644" }
   - { src: "files/restore/{{ ansible_hostname }}/credentials/sealer.jks", dest: "/opt/shibboleth-idp/credentials/sealer.jks", mode: "0644" }
   - { src: "files/restore/{{ ansible_hostname }}/credentials/sealer.kver", dest: "/opt/shibboleth-idp/credentials/sealer.kver", mode: "0644" }
  notify:
   - "Restart Jetty"
  when: restore == "True"
  tags: idp

- name: "Check if 'shibboleth' DB is already created and store the result into 'shib_db' ansible variable"
  command: mysql -u root -s -N -e "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='shibboleth'"
  register: shib_db
  changed_when: false
  tags: idp

- name: "Be sure that the persistent identifiers 'shibboleth' database is created"
  mysql_db:
    encoding: "utf8"
    state: import
    name: all
    target: /root/shib-idp-persistentId-db.sql
  when: shib_db.stdout != 'shibboleth' 
  tags: idp

- name: "Save the 'idp-signing.crt' value for IDP Metadata"
  command: "cat /opt/shibboleth-idp/credentials/idp-signing.crt"
  register: idp_signing_cert
  changed_when: false
  tags: idp

- name: "Save the 'idp-encryption.crt' value for IDP Metadata"
  command: "cat /opt/shibboleth-idp/credentials/idp-encryption.crt"
  register: idp_encryption_cert
  changed_when: false
  tags: idp

- name: "Save the 'idp-backchannel.crt' value for IDP Metadata"
  command: "cat /opt/shibboleth-idp/credentials/idp-backchannel.crt"
  register: idp_backchannel_cert
  changed_when: false
  tags: idp

- name: "Be sure to create the useful directories for Login Page"
  file:
    path: "/var/www/html/{{ item }}"
    state: directory
  with_items:
    - css
  notify:
    - "Restart Apache"
  tags: idp

- name: "Be sure that the IdP is configured correctly - Part 1"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
   - { src: "conf/saml-nameid.properties.j2", dest: "/opt/shibboleth-idp/conf/saml-nameid.properties", owner: "jetty", group: "root", mode: "0600" }
   - { src: "conf/global.xml.j2", dest: "/opt/shibboleth-idp/conf/global.xml", owner: "jetty", group: "root", mode: "0600" }
   - { src: "conf/idp.properties.j2", dest: "/opt/shibboleth-idp/conf/idp.properties", owner: "jetty", group: "root", mode: "0600" }
   - { src: "conf/ldap.properties.j2", dest: "/opt/shibboleth-idp/conf/ldap.properties", owner: "jetty", group: "root", mode: "0600" }
   - { src: "conf/metadata-providers.xml.j2", dest: "/opt/shibboleth-idp/conf/metadata-providers.xml", owner: "jetty", group: "root", mode: "0600" }
   - { src: "idp-metadata.xml.j2", dest: "/opt/shibboleth-idp/metadata/idp-metadata.xml", owner: "jetty", group: "root", mode: "0600"  }
   - { src: "styles/login.css.j2", dest: "/var/www/html/css/login.css", owner: "root", group: "root", mode: "0644" }
   - { src: "styles/login.vm.j2", dest: "/opt/shibboleth-idp/views/login.vm", owner: "root", group: "root", mode: "0644" }
   - { src: "messages/cookie_policy.properties.j2", dest: "/opt/shibboleth-idp/messages/cookie_policy.properties", owner: "root", group: "root", mode: "0644"  }
   - { src: "messages/cookie_policy_it.properties.j2", dest: "/opt/shibboleth-idp/messages/cookie_policy_it.properties", owner: "root", group: "root", mode: "0644"  }
   - { src: "messages/custom.properties.j2", dest: "/opt/shibboleth-idp/messages/custom.properties", owner: "root", group: "root", mode: "0644"  }
   - { src: "messages/custom_it.properties.j2", dest: "/opt/shibboleth-idp/messages/custom_it.properties", owner: "root", group: "root", mode: "0644"  }
   - { src: "messages/messages.properties.j2", dest: "/opt/shibboleth-idp/messages/messages.properties", owner: "root", group: "root", mode: "0644"  }
   - { src: "messages/messages_it.properties.j2", dest: "/opt/shibboleth-idp/messages/messages_it.properties", owner: "root", group: "root", mode: "0644"  }
  notify:
    - "Restart Jetty"
    - "Restart Apache"
  tags: idp

- name: "Be sure that the IdP is configured correctly - Part 2"
  copy:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "{{ item.owner }}"
   group: "{{ item.group }}"
   mode: "{{ item.mode }}"
  with_items:
   - { src: "files/conf/", dest: "/opt/shibboleth-idp/conf/", owner: "jetty", group: "root", mode: "0600" }
   - { src: "files/conf/c14n/subject-c14n.xml", dest: "/opt/shibboleth-idp/conf/c14n/subject-c14n.xml", owner: "jetty", group: "root", mode: "0600" }
   - { src: "files/styles/{{ ansible_hostname }}.{{ https_domain }}/", dest: "/var/www/html/", owner: "root", group: "root", mode: "0644" }
  notify:
    - "Restart Jetty"
    - "Restart Apache"
  tags: idp

- name: "Be sure that eduGAIN Logo is in the right place"
  file:
   path: "/var/www/html/images/edugain-logo.png"
   state: "absent"
  when: idp_edugain_enabled == "False"
  notify:
   - "Restart Apache"
  tags: idp
