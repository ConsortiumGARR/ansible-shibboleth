---
# tasks file for idp
- name: "Be sure that Jetty has the right libraries imported"
  file:
   src: "{{ item.src }}" 
   dest: "{{ item.dest }}"
   owner: "jetty"
   group: "jetty"
   state: link
  with_items:
   - { src: '/usr/share/java/commons-dbcp.jar' , dest: '/opt/jetty/lib/ext/common-dbcp.jar' }
   - { src: '/usr/share/java/commons-pool.jar' , dest: '/opt/jetty/lib/ext/commons-pool.jar' }
   - { src: '/usr/share/java/mysql.jar' , dest: '/opt/jetty/lib/ext/mysql-connector-java.jar' }
  notify:
   - "Restart Jetty"
  tags: idp

- name: "Check if Shibboleth IdP directory exists and store the result into 'shib_idp_dir' ansible variable"
  stat:
    path: "/opt/shibboleth-idp"
  register: shib_idp_dir
  changed_when: false
  tags: idp

- name: Stat Shibboleth IdP tarball in /opt 
  stat: path="/usr/local/src/shibboleth-identity-provider-{{ shib_idp_version }}.tar.gz"
  register: shib_tarball
  tags: idp

- name: Download Shibboleth IdP
  get_url: url="{{ idp_dl_url }}" dest=/usr/local/src
  when: shib_tarball.stat.exists == False
  tags: idp

- name: "Be sure that the Shibboleth Identity Provider is downloaded and extracted into the right position"
  unarchive:
    src: "/usr/local/src/shibboleth-identity-provider-{{ shib_idp_version }}.tar.gz"
    dest: /usr/local/src
    owner: "root"
    group: "root"
    remote_src: yes
  when: shib_idp_dir.stat.isdir is undefined
  tags: idp

- name: "Be sure that the Shibboleth Identity Provider installer properties' files exists in the right position"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "{{ item.mode }}"
  with_items:
   - { src: "shib-idp-install.properties.j2", dest: "/tmp/shib-idp-install.properties", mode: "0644" }
   - { src: "installer.properties.j2", dest: "/tmp/installer.properties", mode: "0644" } 
   - { src: "shib-idp-persistentId-db.sql.j2", dest: "/root/shib-idp-persistentId-db.sql", mode: "0600" }
  when: shib_idp_dir.stat.isdir is undefined
  tags: idp

- name: "Be sure that Jetty is configured correctly for Shibboleth IdP"
  copy:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "root"
   group: "root"
   mode: 0644
  with_items:
   - { src: "files/jstl-1.2.jar", dest: "/usr/local/src/shibboleth-identity-provider-{{ shib_idp_version }}/webapp/WEB-INF/lib/jstl-1.2.jar" }
   - { src: "files/idp.xml", dest: "/opt/jetty/webapps/idp.xml" }
  notify:
   - "Restart Jetty"
  tags: idp 

- name: "Be sure to install Shibboleth IdP"
  shell: "./install.sh -Didp.property.file=/tmp/installer.properties"
  args:
    chdir: "/usr/local/src/shibboleth-identity-provider-{{ shib_idp_version }}/bin"
  environment:
    JAVA_HOME: "{{ java_home_dir }}"
  notify:
    - "Restart Jetty"
  when: shib_idp_dir.stat.isdir is undefined
  tags: idp

- name: "Be sure that the Shibboleth IdP directories have the right permissions"
  file:
    path: "/opt/shibboleth-idp/{{ item }}"
    owner: "jetty"
    recurse: "yes"
    state: directory
  with_items:
    - logs
    - metadata
    - credentials
    - conf
    - system
    - war
  tags: idp

- name: "RESTORE: Be sure to restore the credentials of Shibboleth IdP"
  copy:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "jetty"
   group: "root"
   mode: "{{ item.mode }}"
  with_items:
   - { src: "files/restore/{{ idp_fqdn }}/credentials/idp-signing.crt", dest: "/opt/shibboleth-idp/credentials/idp-signing.crt", mode: "0644" }
   - { src: "files/restore/{{ idp_fqdn }}/credentials/idp-signing.key", dest: "/opt/shibboleth-idp/credentials/idp-signing.key", mode: "0600" }
   - { src: "files/restore/{{ idp_fqdn }}/credentials/idp-encryption.crt", dest: "/opt/shibboleth-idp/credentials/idp-encryption.crt", mode: "0644" }
   - { src: "files/restore/{{ idp_fqdn }}/credentials/idp-encryption.key", dest: "/opt/shibboleth-idp/credentials/idp-encryption.key", mode: "0600" }
   - { src: "files/restore/{{ idp_fqdn }}/credentials/idp-backchannel.crt", dest: "/opt/shibboleth-idp/credentials/idp-backchannel.crt", mode: "0644" }
   - { src: "files/restore/{{ idp_fqdn }}/credentials/idp-backchannel.p12", dest: "/opt/shibboleth-idp/credentials/idp-backchannel.p12", mode: "0644" }
   - { src: "files/restore/{{ idp_fqdn }}/credentials/sealer.jks", dest: "/opt/shibboleth-idp/credentials/sealer.jks", mode: "0644" }
   - { src: "files/restore/{{ idp_fqdn }}/credentials/sealer.kver", dest: "/opt/shibboleth-idp/credentials/sealer.kver", mode: "0644" }
  notify:
   - "Restart Jetty"
  when: idp_restore == "True"
  tags: idp

- name: "Check if 'shibboleth' DB is already created and store the result into 'shib_db' ansible variable"
  command: mysql -u root -s -N -e "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='shibboleth'"
  register: shib_db
  changed_when: false
  tags: idp

- name: "Be sure that the persistent identifiers 'shibboleth' database is created"
  mysql_db:
    encoding: "utf8"
    state: import
    name: all
    target: /root/shib-idp-persistentId-db.sql
  when: shib_db.stdout != 'shibboleth' 
  tags: idp

- name: "Save the 'idp-signing.crt' value for IDP Metadata"
  command: "cat /opt/shibboleth-idp/credentials/idp-signing.crt"
  register: idp_signing_cert
  changed_when: false
  tags: idp

- name: "Save the 'idp-encryption.crt' value for IDP Metadata"
  command: "cat /opt/shibboleth-idp/credentials/idp-encryption.crt"
  register: idp_encryption_cert
  changed_when: false
  tags: idp

- name: "Save the 'idp-backchannel.crt' value for IDP Metadata"
  command: "cat /opt/shibboleth-idp/credentials/idp-backchannel.crt"
  register: idp_backchannel_cert
  changed_when: false
  tags: idp

- name: "Be sure to create 'css' directory needed by Login Page"
  file:
    path: "/var/www/html/css"
    state: directory
  notify:
    - "Restart Apache"
  tags: idp

- name: "Be sure that IdP configurations files are present - Part 1"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "jetty"
    group: "root"
    mode: "0600"
  with_items:
   - { src: "conf/saml-nameid.properties.j2", dest: "/opt/shibboleth-idp/conf/saml-nameid.properties" }
   - { src: "conf/global.xml.j2", dest: "/opt/shibboleth-idp/conf/global.xml" }
   - { src: "conf/idp.properties.j2", dest: "/opt/shibboleth-idp/conf/idp.properties" }
   - { src: "conf/ldap.properties.j2", dest: "/opt/shibboleth-idp/conf/ldap.properties" }
   - { src: "conf/services.xml.j2", dest: "/opt/shibboleth-idp/conf/services.xml" }
   - { src: "conf/attribute-filter-v3-federation.xml.j2", dest: "/opt/shibboleth-idp/conf/attribute-filter-v3-federation.xml" }
   - { src: "conf/metadata-providers.xml.j2", dest: "/opt/shibboleth-idp/conf/metadata-providers.xml" }
   - { src: "idp-metadata.xml.j2", dest: "/opt/shibboleth-idp/metadata/idp-metadata.xml" }
   - { src: "idp.conf.j2", dest: "/etc/apache2/sites-enabled/idp.conf" }
  notify:
    - "Restart Jetty"
    - "Restart Apache"
  tags: idp

- name: "Be sure to download Metadata files and put them into the right directory"
  get_url:
    url: "{{ item.url }}"
    dest: "/opt/shibboleth-idp/metadata/{{ item.file }}"
    owner: "jetty"
    group: "root"
    mode: "0644"
    validate_certs: "{{ item.validate_ssl_cert }}"
  with_items: "{{ idp_metadata_providers }}"
  tags: idp

- name: "Be sure that IdP configurations are present - Part 2"
  copy:
   src: "files/conf/"
   dest: "/opt/shibboleth-idp/conf/"
   owner: "jetty"
   group: "root"
   mode: "0600"
  notify:
    - "Restart Jetty"
  tags: idp

- name: "Be sure that Federation logo, eduGAIN logo and other images are present"
  copy:
   src: "files/restore/{{ idp_fqdn }}/styles/images"
   dest: "/var/www/html/"
   owner: "root"
   group: "root"
   mode: "0644"
  notify:
    - "Restart Apache"
  tags: idp

- name: "Be sure that IdP image files are present"
  copy:
   src: "files/restore/{{ idp_fqdn }}/styles/{{ item.key }}/"
   dest: "/var/www/html/{{ item.key }}/"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  notify:
    - "Restart Apache"
  tags: idp

- name: "Be sure that default english messages and IdP style files are present"
  template:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "root"
   group: "root"
   mode: "0644"
  with_items:
   - { src: "views/login.css.j2", dest: "/var/www/html/css/login.css" }
   - { src: "views/consent.css.j2", dest: "/var/www/html/css/consent.css" }
   - { src: "views/login.vm.j2", dest: "/opt/shibboleth-idp/views/login.vm" }
   - { src: "views/logout.vm.j2", dest: "/opt/shibboleth-idp/views/logout.vm" }
   - { src: "views/logout-complete.vm.j2", dest: "/opt/shibboleth-idp/views/logout-complete.vm" }
   - { src: "views/logout-propagate.vm.j2", dest: "/opt/shibboleth-idp/views/logout-propagate.vm" }
   - { src: "views/intercept/attribute-release.vm.j2", dest: "/opt/shibboleth-idp/views/intercept/attribute-release.vm" }
   - { src: "messages/cookie_policy.properties.j2", dest: "/opt/shibboleth-idp/messages/cookie_policy.properties" }
   - { src: "messages/custom.properties.j2", dest: "/opt/shibboleth-idp/messages/custom.properties" }
   - { src: "messages/messages.properties.j2", dest: "/opt/shibboleth-idp/messages/messages.properties" }
  notify:
    - "Restart Jetty"
    - "Restart Apache"
  tags: idp

- name: "Be sure that messages for interested languages are present"
  template:
   src: "messages/messages_{{ item.key }}.properties.j2"
   dest: "/opt/shibboleth-idp/messages/messages_{{ item.key }}.properties"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  when: "item.key != 'en'"
  notify:
    - "Restart Jetty"
  tags: idp

- name: "Be sure that custom messages for interested languages are present"
  template:
   src: "messages/custom_{{ item.key }}.properties.j2"
   dest: "/opt/shibboleth-idp/messages/custom_{{ item.key }}.properties"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  when: "item.key != 'en'"
  notify:
    - "Restart Jetty"
  tags: idp

- name: "Be sure that cookie_policy messages for interested languages are present"
  template:
   src: "messages/cookie_policy_{{ item.key }}.properties.j2"
   dest: "/opt/shibboleth-idp/messages/cookie_policy_{{ item.key }}.properties"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  when: "item.key != 'en'"
  notify:
    - "Restart Jetty"
  tags: idp

- name: "Be sure that Information Page for interested languages are present"
  template:
   src: "styles/{{ item.key }}/info.html.j2"
   dest: "/var/www/html/{{ item.key }}/info.html"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  #when: "item.key != 'en'"
  notify:
    - "Restart Apache"
  tags: idp

- name: "Be sure that Privacy Policy Page for interested languages are present"
  template:
   src: "styles/{{ item.key }}/privacy.html.j2"
   dest: "/var/www/html/{{ item.key }}/privacy.html"
   owner: "root"
   group: "root"
   mode: "0644"
  with_dict: "{{ idp_metadata }}"
  #when: "item.key != 'en'"
  notify:
    - "Restart Apache"
  tags: idp

- name: "Be sure that needed packages for statistics are installed"
  package:
   name: "{{item}}"
   state: latest
  with_items:
   - python-mysqldb
   - php5-mysql
  notify:
   - "Safe Upgrade"
  tags: idp_stats

- name: "Check if 'statistics' DB is already created and store the result into 'statistics_db' ansible variable"
  command: mysql -u root -s -N -e "SELECT SCHEMA_NAME FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME='statistics'"
  register: statistics_db
  changed_when: false
  tags: idp_stats

- name: "Be sure that the 'statistics' database is created"
  mysql_db:
    encoding: "utf8"
    state: import
    name: all
    target: /root/statistics-idp-db.sql
  when: statistics_db.stdout != 'statistics'
  tags: idp_stats

- name: "Be sure that 'loganalysis' directory is created"
  file:
    dest: "/opt/loganalysis"
    owner: "root"
    group: "root"
    mode: "0644" 
    state: directory
  tags: idp_stats

- name: "Be sure that 'statistics' directory is created"
  file:
    dest: "/var/www/html/statistics"
    owner: "root"
    group: "root"
    mode: "0755" 
    state: directory
  tags: idp_stats

- name: "Be sure that the files needed for statistics application are in ther right position - Part 1"
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "root"
    group: "root"
    mode: "{{ item.mode }}"
  with_items:
   - { src: "statistics/statistics-idp-db.sql.j2", dest: "/root/statistics-idp-db.sql", mode: "0600" }
   - { src: "statistics/dbanalysis.py.j2", dest: "/opt/loganalysis/dbanalysis.py", mode: "0600" }
   - { src: "statistics/config.php.j2", dest: "/opt/loganalysis/config.php", mode: "0644" }
   - { src: "statistics/insertSP.php.j2", dest: "/opt/loganalysis/insertSP.php", mode: "0644" }
   - { src: "statistics/IDProvider.conf.php.j2", dest: "/opt/loganalysis/IDProvider.conf.php", mode: "0644" }
   - { src: "statistics/db.php.j2", dest: "/var/www/html/statistics/db.php", mode: "0644" }
  tags: idp_stats

- name: "Be sure that the files needed for statistics application are in ther right position - Part 2"
  copy:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "{{ item.owner }}"
   group: "{{ item.group }}"
   mode: "{{ item.mode }}"
  with_items:
   - { src: "files/statistics/conf/", dest: "/opt/loganalysis/", owner: "root", group: "root", mode: "0644" }
   - { src: "files/statistics/cron/cron-idp-stats", dest: "/etc/cron.daily/cron-idp-stats", owner: "root", group: "root", mode: "0755" }
   - { src: "files/statistics/apache/idp-stats.conf", dest: "/etc/apache2/sites-enabled/idp-stats.conf", owner: "root", group: "root", mode: "0644" }
  notify:
   - "Restart Apache"
  tags: idp_stats

- name: "Be sure that needed metadata file is linked correctly"
  file:
   src: "/opt/shibboleth-idp/metadata/{{ fed_md }}"
   dest: "/opt/loganalysis/{{ fed_md }}"
   owner: "root"
   group: "root"
   state: "link"
  tags: idp_stats

- name: "Be sure to put the Statistic Web Application in the right position"
  copy:
   src: "files/statistics/apache/www/"
   dest: "/var/www/html/statistics/"
   owner: "root"
   group: "root"
   mode: "0644"
  tags: idp_stats
