---
# tasks file for openldap

- name: "Check if debconf-utils is installed"
  become: yes
  become_method: sudo
  apt: 
   name: "debconf-utils"
   update_cache: yes
   state: latest
  tags: openldap

- name: "Check debconf for slapd entries"
  become: yes
  become_method: sudo
  shell: (debconf-get-selections | grep -q -s slapd); echo $?
  register: debconf
  ignore_errors: yes
  tags: openldap

- name: "Configure LDAP authentication params"
  become: yes
  become_method: sudo
  debconf:
    name: "slapd"
    question: "{{ item.key }}"
    vtype: "{{ item.type }}"
    value: "{{ item.value }}"
  with_items:
    - key: slapd/password1
      type: password
      value: "{{ ldap_root_pw|default('') }}"
    - key: slapd/password2
      type: password
      value: "{{ ldap_root_pw|default('') }}"
    - key: slapd/move_old_database
      type: boolean
      value: true
    - key: slapd/domain
      type: string
      value: "{{ ldap_domain|default('') }}"
    - key: shared/organization
      type: string
      value: "{{ ldap_org|default('') }}"
    - key: slapd/no_configuration
      type: boolean
      value: false
    - key: slapd/purge_database
      type: boolean
      value: false
    - key: slapd/allow_ldap_v2
      type: boolean
      value: false
    - key: slapd/backend
      type: select
      value: MDB
  when: debconf.stdout == "1"
  tags: openldap

- name: "Install slapd and ldap-utils"
  become: yes
  become_method: sudo
  apt: 
   name: "{{ item }}"
   update_cache: yes
   state: latest
  with_items:
    - slapd
    - ldap-utils
  tags: openldap

- name: "Add slapd user to ssl-cert group"
  become: yes
  become_method: sudo
  user: 
   name: openldap
   groups: ssl-cert
  tags: openldap

- name: "Create /root/ldap-configs used to maintain the LDAP configuration files"
  become: yes
  become_method: sudo
  file:
    path: /root/ldap-configs
    state: directory
    mode: 0600
  tags: openldap

- name: "Store Directory LDIFs to /root/ldap-configs"
  become: yes
  become_method: sudo
  template:
   src: "{{ item.src }}"
   dest: "{{ item.dest }}"
   owner: "root"
   group: "root"
   mode: "0600"
  with_items:
   - src: "directory-config.ldif.j2"
     dest: "/root/ldap-configs/directory-config.ldif"
   - src: "directory-content.ldif.j2"
     dest: "/root/ldap-configs/directory-content.ldif"
  tags: openldap 

- name: "Copy eduPerson, schac schema and member-overlay to /root/ldap-configs"
  become: yes
  become_method: sudo
  copy:
   src: "files/{{ item }}"
   dest: "/root/ldap-configs"
   owner: "root"
   group: "root"
   mode: "0644"
  with_items:
   - eduperson-201602.ldif
   - schac-20150413.ldif
   - memberof-overlay.ldif
  tags: openldap

- name: "Apply Directory config ldif"
  become: yes
  become_method: sudo
  command: "ldapmodify -Y EXTERNAL -H ldapi:/// -f /root/ldap-configs/directory-config.ldif"
  notify: 
   - "Restart slapd"
  tags: openldap

- name: "Search Directory for memberof overlay"
  become: yes
  become_method: sudo
  shell: "ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b cn=config  olcOverlay=memberof"
  register: memberof_overlay
  tags: openldap
  
- name: "Add memberOf overlay to openldap"
  become: yes
  become_method: sudo
  command: "ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldap-configs/memberof-overlay.ldif"
  when: memberof_overlay.stdout == ""
  notify: 
   - "Restart slapd"
  tags: openldap

- name: "Search Directory for eduperson schema"
  become: yes
  become_method: sudo
  shell: "ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b cn=schema,cn=config  cn=*eduperson dn"
  register: eduperson_schema
  tags: openldap

- name: "Add eduperson-201602 schema ldif"
  become: yes
  become_method: sudo
  command: "ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldap-configs/eduperson-201602.ldif"
  when: eduperson_schema.stdout == ""
  notify: 
   - "Restart slapd"
  tags: openldap

- name: "Search Directory for schac schema"
  become: yes
  become_method: sudo
  shell: "ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b cn=schema,cn=config  cn=*schac dn"
  register: schac_schema
  tags: openldap

- name: "Add schac-20150413 schema ldif"
  become: yes
  become_method: sudo
  command: "ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldap-configs/schac-20150413.ldif"
  when: schac_schema.stdout == ""
  notify: 
   - "Restart slapd"
  tags: openldap
  
- name: "Search the branch 'people' inside LDAP and store the result into 'people_in_ldap' variable"
  become: yes
  become_method: sudo
  shell: "ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b {{ ldap_basedn }} objectClass=organizationalUnit dn | grep ou=people,{{ ldap_basedn }} | wc -l"
  register: people_in_ldap
  tags: openldap

- name: "Search the branch 'groups' inside LDAP and store the result into 'groups_in_ldap' variable"
  become: yes
  become_method: sudo
  shell: "ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b {{ ldap_basedn }} objectClass=organizationalUnit dn | grep ou=groups,{{ ldap_basedn }} | wc -l"
  register: groups_in_ldap
  tags: openldap

- name: "Search the branch 'system' inside LDAP and store the result into 'system_in_ldap' variable"
  become: yes
  become_method: sudo
  shell: "ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b {{ ldap_basedn }} objectClass=organizationalUnit dn | grep ou=system,{{ ldap_basedn }} | wc -l"
  register: system_in_ldap
  tags: openldap

- name: "Add Directory content ldif"
  become: yes
  become_method: sudo
  command: "ldapadd -Y EXTERNAL -H ldapi:/// -f /root/ldap-configs/directory-content.ldif"
  when: (people_in_ldap.stdout == "0" and groups_in_ldap.stdout == "0" and system_in_ldap.stdout == "0")
  notify: 
   - "Restart slapd"
  tags: openldap

- name: "Add ldap.conf to /etc/ldap"
  become: yes 
  become_method: sudo
  copy:
   src: "files/ldap.conf"
   dest: "/etc/ldap/ldap.conf"
   owner: "root"
   group: "root"
   mode: "0644"
  notify:
   - "Restart slapd"
  tags: openldap

- name: "Start slapd"
  become: yes
  become_method: sudo
  service: 
   name: slapd
   state: started
   enabled: yes
  tags: openldap
